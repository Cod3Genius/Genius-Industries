/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as MarketplaceImport } from './routes/marketplace'
import { Route as LoginImport } from './routes/login'
import { Route as InvestmentbackupImport } from './routes/investment_backup'
import { Route as InvestmentSimpleImport } from './routes/investment-simple'
import { Route as InvestmentBackupImport } from './routes/investment-backup'
import { Route as InvestmentImport } from './routes/investment'
import { Route as CreditsImport } from './routes/credits'
import { Route as ContactImport } from './routes/contact'
import { Route as ClientDashboardImport } from './routes/client-dashboard'
import { Route as AdminImport } from './routes/admin'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceRoute = MarketplaceImport.update({
  path: '/marketplace',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const InvestmentbackupRoute = InvestmentbackupImport.update({
  path: '/investment_backup',
  getParentRoute: () => rootRoute,
} as any)

const InvestmentSimpleRoute = InvestmentSimpleImport.update({
  path: '/investment-simple',
  getParentRoute: () => rootRoute,
} as any)

const InvestmentBackupRoute = InvestmentBackupImport.update({
  path: '/investment-backup',
  getParentRoute: () => rootRoute,
} as any)

const InvestmentRoute = InvestmentImport.update({
  path: '/investment',
  getParentRoute: () => rootRoute,
} as any)

const CreditsRoute = CreditsImport.update({
  path: '/credits',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const ClientDashboardRoute = ClientDashboardImport.update({
  path: '/client-dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/client-dashboard': {
      preLoaderRoute: typeof ClientDashboardImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/credits': {
      preLoaderRoute: typeof CreditsImport
      parentRoute: typeof rootRoute
    }
    '/investment': {
      preLoaderRoute: typeof InvestmentImport
      parentRoute: typeof rootRoute
    }
    '/investment-backup': {
      preLoaderRoute: typeof InvestmentBackupImport
      parentRoute: typeof rootRoute
    }
    '/investment-simple': {
      preLoaderRoute: typeof InvestmentSimpleImport
      parentRoute: typeof rootRoute
    }
    '/investment_backup': {
      preLoaderRoute: typeof InvestmentbackupImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/marketplace': {
      preLoaderRoute: typeof MarketplaceImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AboutRoute,
  AdminRoute,
  ClientDashboardRoute,
  ContactRoute,
  CreditsRoute,
  InvestmentRoute,
  InvestmentBackupRoute,
  InvestmentSimpleRoute,
  InvestmentbackupRoute,
  LoginRoute,
  MarketplaceRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignInRoute,
  SignUpRoute,
  SignupRoute,
])

/* prettier-ignore-end */
